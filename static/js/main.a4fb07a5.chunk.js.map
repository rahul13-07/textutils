{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","fontSize","href","title","type","id","onClick","toggleMode","for","text","TextForm","useState","setText","heading","value","rows","onChange","event","target","backgroundColor","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","filter","element","length","defaultProps","aboutUs","Alert","alert","role","charAt","slice","msg","App","setMode","setAlert","setMyStyle","showAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a4fb07a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  const newstyle={\r\n       color : \"#1b5e2d\",\r\n       fontSize: 30\r\n  }\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" style={newstyle} href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item \">\r\n              {/* <Link className=\"nav-link active\" to=\"/\">Home <span className=\"sr-only\"></span></Link> */}\r\n              <a className=\"nav-link active\" href=\"#\">Home <span className=\"sr-only\"></span></a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutUs}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\" >{props.text}</label>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes={title:PropTypes.string,\r\n                  aboutUs:PropTypes.string\r\n                }\r\nNavbar.defaultProps={title : 'Set Title Here',\r\n                     aboutUs : 'About Text Here'\r\n                    }","import React,{useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleupClick =()=>{\r\n        var newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handlednClick =()=>{\r\n        var newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleclClick =()=>{\r\n        setText(\"\");\r\n    }\r\n    const handlecpClick =()=>{\r\n        var text = document.getElementById(\"Textarea\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handlespClick =()=>{\r\n        var newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n    }\r\n    const handleonClick =(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 style={{color : props.mode ==='light'?'black':'white'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\" >\r\n                <textarea className=\"form-control my-3\" id=\"Textarea\" value={text} rows=\"10\"\r\n                 onChange={handleonClick} style={{backgroundColor : props.mode ==='light'?'white':'#13466e' , color : props.mode ==='light'?'black':'white'}}></textarea>\r\n            </div>\r\n            <button className=\"btn-primary\" onClick={handleupClick}>Convert To UpperCase</button>\r\n            <button className=\"btn-primary mx-3\" onClick={handlednClick}>Convert To LowerCase</button>\r\n            <button className=\"btn-primary mx-1\" onClick={handleclClick}>Clear Text</button>\r\n            <button className=\"btn-primary mx-3\" onClick={handlecpClick}>Copy Text</button>\r\n            <button className=\"btn-primary mx-2\" onClick={handlespClick}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-5\" >\r\n            <h2 style={{color : props.mode ==='light'?'black':'white'}}>\r\n                Your Text Summary:\r\n            </h2>\r\n            <p style={{color : props.mode ==='light'?'black':'white'}}>\r\n                {text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} Characters\r\n            </p>\r\n            <p style={{color : props.mode ==='light'?'black':'white'}}>\r\n                {0.008 * text.split(\" \").length} Minutes Read\r\n            </p>\r\n            <h2 className=\"my-3\" style={{color : props.mode ==='light'?'black':'white'}}>\r\n                Preview\r\n            </h2>\r\n            <p style={{color : props.mode ==='light'?'black':'white'}}>\r\n                {text.length>0?text:\"OoPs!!!  The Above TextBox is Empty....Enter Something in it to Preview \"}\r\n            </p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(text)=>{\r\n         text = text.toLowerCase();\r\n        return text.charAt(0).toUpperCase() + text.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)} :</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [text, setText] = useState('Enable DarkMode')\n  const [alert, setAlert] = useState(null)\n  const [myStyle, setMyStyle] = useState({\n    color:\"black\" ,\n    backgroundColor:\"white\"\n})\n  const showAlert = (msg,type)=>{\n    setAlert({\n      msg : msg,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const togglemode = ()=>{\n    if(mode === 'light'){\n      setMyStyle({ \n        color:\"white\" ,\n        backgroundColor:\"black\"\n      })\n      setMode('dark');\n      setText('Disable DarkMode');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"DarkMode has been Enabled\",\"success\");\n    }\n    else{\n      setMyStyle({\n      color:\"black\" ,\n      backgroundColor:\"white\"\n      })\n      setMode('light');\n      setText('Enable DarkMode');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"DarkMode has been disabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutUs=\"About Us\" mode={mode} toggleMode={togglemode}  text={text} />\n      <Alert alert={alert}/>\n      <div className=\"container my-5\">\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About mystyle={myStyle}/>\n          </Route>\n          <Route path=\"/\">\n            <TextForm heading=\"Enter the Text to Analyze\" mode={mode}/>\n          </Route>\n        </Switch> */}\n        <TextForm heading=\"Enter the Text to Analyze\" mode={mode}/>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}